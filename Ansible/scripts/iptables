#!/bin/bash

if [ $(id -u) -ne 0 ]; then
	echo "You need to be root or sudo to use this script!"
	exit 0
fi;

IP=iptables

# Reset tables
$IP -F
$IP -X
$IP -t mangle -F
$IP -t mangle -X

# Keep Actual connexion
$IP -A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
$IP -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

# DOS
# Drop invalid packets
$IP -t mangle -A PREROUTING -m conntrack --ctstate INVALID -j DROP

# Drop TCP packets that are new and are not SYN
$IP -t mangle -A PREROUTING -p tcp ! --syn -m conntrack --ctstate NEW -j DROP

# Drop SYN packets with suspicious MSS value
$IP -t mangle -A PREROUTING -p tcp -m conntrack --ctstate NEW -m tcpmss ! --mss 536:65535 -j DROP

# Block packets with bogus TCP flags
$IP -t mangle -A PREROUTING -p tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG NONE -j DROP
$IP -t mangle -A PREROUTING -p tcp --tcp-flags FIN,SYN FIN,SYN -j DROP
$IP -t mangle -A PREROUTING -p tcp --tcp-flags SYN,RST SYN,RST -j DROP
$IP -t mangle -A PREROUTING -p tcp --tcp-flags FIN,RST FIN,RST -j DROP
$IP -t mangle -A PREROUTING -p tcp --tcp-flags FIN,ACK FIN -j DROP
$IP -t mangle -A PREROUTING -p tcp --tcp-flags ACK,URG URG -j DROP
$IP -t mangle -A PREROUTING -p tcp --tcp-flags ACK,FIN FIN -j DROP
$IP -t mangle -A PREROUTING -p tcp --tcp-flags ACK,PSH PSH -j DROP
$IP -t mangle -A PREROUTING -p tcp --tcp-flags ALL ALL -j DROP
$IP -t mangle -A PREROUTING -p tcp --tcp-flags ALL NONE -j DROP
$IP -t mangle -A PREROUTING -p tcp --tcp-flags ALL FIN,PSH,URG -j DROP
$IP -t mangle -A PREROUTING -p tcp --tcp-flags ALL SYN,FIN,PSH,URG -j DROP
$IP -t mangle -A PREROUTING -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j DROP

# Drop fragments in all chains
$IP -t mangle -A PREROUTING -f -j DROP

# Limit connections per source IP
$IP -A INPUT -p tcp -m connlimit --connlimit-above 111 -j REJECT --reject-with tcp-reset

# Limit new TCP connections per second per source IP
$IP -A INPUT -p tcp -m conntrack --ctstate NEW -m limit --limit 60/s --limit-burst 20 -j ACCEPT
$IP -A INPUT -p tcp -m conntrack --ctstate NEW -j DROP

# SSH brute-force protection ###
$IP -A INPUT -p tcp --dport 2210 -m conntrack --ctstate NEW -m recent --set
$IP -A INPUT -p tcp --dport 2210 -m conntrack --ctstate NEW -m recent --update --seconds 60 --hitcount 10 -j DROP

# Protection against port scanning ###
$IP -N port-scanning
$IP -A port-scanning -p tcp --tcp-flags SYN,ACK,FIN,RST RST -m limit --limit 1/s --limit-burst 2 -j RETURN
$IP -A port-scanning -j DROP

# SSH
$IP -A INPUT -p tcp --dport 2210 -j ACCEPT
$IP -A OUTPUT -p tcp --sport 2210 -j ACCEPT

# DNS
$IP -A INPUT -p udp --sport 53 -j ACCEPT
$IP -A OUTPUT -p udp --dport 53 -j ACCEPT

# HTTP & HTTPS | In & Out
$IP -t filter -A INPUT -p tcp -m tcp --dport 80 -j ACCEPT
$IP -t filter -A INPUT -p tcp -m tcp --dport 443 -j ACCEPT
$IP -t filter -A OUTPUT -p tcp -m tcp --dport 80 -j ACCEPT
$IP -t filter -A OUTPUT -p tcp -m tcp --dport 443 -j ACCEPT

# Block rest
$IP -A OUTPUT -j DROP
$IP -A INPUT -j DROP
